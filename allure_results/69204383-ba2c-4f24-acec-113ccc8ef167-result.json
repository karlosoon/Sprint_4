{"name": "test_yandex_tab_opens_by_click_on_yandex_logo", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <test_base_page.TestBasePage object at 0x102937290>\n\n    def test_yandex_tab_opens_by_click_on_yandex_logo(self):\n        self.driver.get('https://qa-scooter.praktikum-services.ru/')\n        base_page = BasePage(self.driver)\n        base_page.click_on_yandex_logo()\n        base_page.switch_to_new_tab()\n>       base_page.wait_for_new_tab()\n\ntests/test_base_page.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/base_page.py:20: in wait_for_new_tab\n    WebDriverWait(self.driver, 5).until(ec.url_to_be('https://dzen.ru/?yredirect=true'))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"c3115a85-37b4-4d83-b459-0ece2ab70963\")>, method = <function url_to_be.<locals>._predicate at 0x10295ee80>, message = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nvenv/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException"}, "start": 1673191406746, "stop": 1673191413273, "uuid": "f73a08bd-aea1-4e72-8148-63d7723b45cc", "historyId": "22ec6ea1332b13a13684fe272f163229", "testCaseId": "f54f4700f3547e9e764877bbd586b13f", "fullName": "tests.test_base_page.TestBasePage#test_yandex_tab_opens_by_click_on_yandex_logo", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_base_page"}, {"name": "subSuite", "value": "TestBasePage"}, {"name": "host", "value": "nb-mkarlo"}, {"name": "thread", "value": "4693-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_base_page"}]}